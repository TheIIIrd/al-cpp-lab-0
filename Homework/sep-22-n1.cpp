/*
Лабораторная Работа 1
*/


#include <iostream>
#include <string>
#include <math.h>
#include <cmath>

using namespace std;


// Вывести на одной строке числа 1, 13 и 49 с одним пробелом между ними.
void num_1 () {

    cout << "1 13 49" << endl;

}


// Вывести на одной строке числа 1, 13 и 49 с заданным символом между ними. Символ вводится с клавиатуры.
void num_2 () {

    string symbol;

    cout << "Введите символ : ";

    cin.ignore();
    getline(cin, symbol);

    cout << "1" << symbol << "13" << symbol << "49" << endl;

}


// Составить программу вывода на экран в одну строку трех любых чисел с двумя пробелами между ними.
void num_3 () {

    long double q, w, e;

    cout << "Введите числа :";
    cin >> q >> w >> e;

    cout << q << "  " << w << "  " << e << endl;

}


/*
Составить программу:
-   вычисления значения функции x=12a^2 + 7a - 12 при любом значении а;
-	вычисления значения функции y=3x^3 + 4x^2 - 11x + 1 при любом значении x.
*/
void num_4 () {

    long double a, x, y;

    cout << "Введите число a : "; 
    cin >> a;

    x = (12 * pow(a, 2) + 7 * a - 12);
    cout << "х равен : " << x << endl;

    cout << "Введите число x : "; 
    cin >> x;

    y = (3 * pow(x, 3) + 4 * pow(x, 2) - 11 * x + 1);
    cout << "y равен : " << y << endl;

}


// С клавиатуры вводиятся объем и масса тела. Вывести на экран плотность материала этого тела.
void num_5 () {

    long double volume, mass;

    cout << "Введите объем и массу тела : ";
    cin >> volume >> mass;

    if (volume != 0) {

        cout << "Плотность материала : " << (mass / volume) << endl;

    }

    else {

        cout << "Задача не имеет решения, т.к. объем равен " << volume << endl;
        
    }
    

}


// Составить программу решения линейного уравнения ax + b = 0 (a не равно 0). Числа a и b вводятся с клавиатуры.
void num_6 () {

    long double a, b;

    cout << "Введите a и b :";
    cin >> a >> b;

    cout << "x будет равен : " << (-1 * (b / a)) << endl;

}


/*
Известны координаты на плоскости двух точек. Составить программу вычисления расстояния между ними.
Координаты вводятся с клавиатуры.
*/
void num_7 () {

    long double x1, y1, x2, y2;
    
    cout << "Введите координаты 2-х точек : ";
    cin >> x1 >> y1 >> x2 >> y2;

    cout << "Расстояние равно : " << sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2)) << endl;

}


// Даны основания и высота равнобедренной трапеции. Найти периметр трапеции. Данные вводятся с клавиатуры.
void num_8 () {

    long double a, b, h;

    cout << "Введите основания и высоту равнобедренной трапеции : ";
    cin >> a >> b >> h;

    cout << "Периметр равен : " << (a + b + 2 * sqrt(pow(h, 2) + pow((a - b) / 2, 2))) << endl;

}


// Дана длина ребра куба. Найти объем куба и площадь его боковой поверхности. Данные вводятся с клавиатуры.
void num_9 () {

    long double r;

    cout << "Введите длину ребра куба : ";
    cin >> r;

    cout << "Объем куба равен : " << pow(r, 3) << endl << "Площадь его боковой поверхности равна : " << r * r * 4 << endl;

}


// Дана сторона квадрата. Найти его периметр. Данные вводятся с клавиатуры.
void num_10 () {

    long double a;

    cout << "Введите длину стороны квадрата : ";
    cin >> a;

    cout << "Периметр равен : " << a * 4 << endl;

}


// Дан радиус окружности. Найти ее диаметр. Данные вводятся с клавиатуры.
void num_11 () {

    long double r;

    cout << "Введите радиус окружности : ";
    cin >> r;

    cout << "Диаметр равен : " << r * 2 << endl;

}


/* 
Реализовать программу для приветсвия студента. Имя студента вводится с клавиатуры, 
а на экран выводится приветсвие `Hello, %name%! My name is C++.`.
*/
void num_12 () {

    string name;

    cout << "Привет! Как тебя зовут? ";

    cin.ignore();
    getline(cin, name);

    cout << "Hello, " << name << "! My name is C++." << endl;

}


int main () {

    int task_num;

    cout << "Введите номер задачи : ";
    cin >> task_num;

    switch (task_num) {

        case 1: num_1(); return 0;

        case 2: num_2(); return 0;

        case 3: num_3(); return 0;

        case 4: num_4(); return 0;

        case 5: num_5(); return 0;

        case 6: num_6(); return 0;

        case 7: num_7(); return 0;

        case 8: num_8(); return 0;

        case 9: num_9(); return 0;

        case 10: num_10(); return 0;

        case 11: num_11(); return 0;

        case 12: num_12(); return 0;

        default: 
            cout << "Задачи, под номером " << task_num << " не существует" << endl;
            return 0;
    
    }
    
    return 0;
}
